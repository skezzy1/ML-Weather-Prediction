import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeRegressor
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import mean_squared_error, mean_absolute_error, r2_score

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
df = pd.read_csv('data_preparation/csv/processed_regions/Center/Center_Winter.csv')

# –û–∑–Ω–∞–∫–∏ –π —Ü—ñ–ª—å
features = ['Year', 'Month', 'Average Temperature (celsius)',
            'Average Wind Speed (m/s)', 'Max Snow Depth (cm)']
target = 'Total Precipitation (mm)'

X = df[features]
y = df[[target]]

# –ú–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è
scaler_X = MinMaxScaler()
scaler_y = MinMaxScaler()
X_scaled = scaler_X.fit_transform(X)
y_scaled = scaler_y.fit_transform(y)

# Train/Test
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y_scaled.ravel(), test_size=0.2, random_state=42)

# –î–µ—Ä–µ–≤–æ —Ä—ñ—à–µ–Ω—å
model = DecisionTreeRegressor(max_depth=8, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

# –ú–µ—Ç—Ä–∏–∫–∏
mse = mean_squared_error(y_test, y_pred)
mae = mean_absolute_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("üå≥ Decision Tree Regressor")
print(f"MSE: {mse:.2f}")
print(f"MAE: {mae:.2f}")
print(f"R¬≤ Score: {r2:.2f}")

# –ì—Ä–∞—Ñ—ñ–∫
plt.figure(figsize=(10, 5))
plt.scatter(y_test, y_pred, color='green', alpha=0.6, label='–ü—Ä–æ–≥–Ω–æ–∑–∏')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], 'r--', label='–Ü–¥–µ–∞–ª')
plt.xlabel("–§–∞–∫—Ç–∏—á–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è")
plt.ylabel("–ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è")
plt.title("Decision Tree: –§–∞–∫—Ç–∏—á–Ω—ñ vs –ü—Ä–æ–≥–Ω–æ–∑–æ–≤–∞–Ω—ñ")
plt.legend()
plt.tight_layout()
plt.show()
